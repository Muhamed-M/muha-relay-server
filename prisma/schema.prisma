generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int                  @id @default(autoincrement())
  email         String               @unique
  username      String               @unique
  password      String
  firstName     String
  lastName      String?
  phoneNumber   String?
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  conversations ConversationMember[]
  messages      Message[]
  receipts      MessageReceipt[]
}

model Conversation {
  id        Int                  @id @default(autoincrement())
  name      String?
  isGroup   Boolean              @default(false)
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt
  messages  Message[]
  members   ConversationMember[]
}

model ConversationMember {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  addedAt        DateTime     @default(now())
  role           String? // Optional field to indicate role in a group (e.g., admin, member)

  @@unique([userId, conversationId])
}

model Message {
  id             Int              @id @default(autoincrement())
  content        String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  conversation   Conversation     @relation(fields: [conversationId], references: [id])
  conversationId Int
  sender         User             @relation(fields: [senderId], references: [id])
  senderId       Int
  receipts       MessageReceipt[]
}

model MessageReceipt {
  id        Int       @id @default(autoincrement())
  message   Message   @relation(fields: [messageId], references: [id])
  messageId Int
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  readAt    DateTime? // Timestamp of when the message was read; null if not read

  @@unique([messageId, userId])
}
